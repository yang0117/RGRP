install("RGRP")
library(devtools)
install("RGRP")
install("../RGRP")
?glmnet
install("../RGRP")
fit01
fit01()
install("../RGRP")
fit01
lm
library(fit01)
library(RGRP)
fit01
fit01(x=matirx(rnorm(20),ncol=2),y=rnorm(10))
fit01(x=matrix(rnorm(20),ncol=2),y=rnorm(10))
glmnet
glmnet()
library(devtools)
install("../RGRP")
install("../RGRP")
library(RGRP)
?glmnet
?search
search()
document()
check()
check()
?check
check()
library(devtools)
library(RGRP)
check()
getw()
getwd()
check()
check()
check()
check()
check()
?check
use_vignette("more")
sim.no <- 100
sample.size <- 500
sim.res <- matrix(NA,ncol = sample.size,nrow = sim.no)
for(i in 1:sim.no){
for(j in 1:sample.size){
sample.single <- runif(2,min = 0,max = 1)
sim.res[i,j] <- (sqrt(sum(sample.single^2)) <=1)
}
}
mean(sim.res)*4
sim.no <- 100
sample.size <- 500
sim.res <- matrix(NA,ncol = sample.size,nrow = sim.no)
for(i in 1:sim.no){
for(j in 1:sample.size){
sample.single <- runif(2,min = 0,max = 1)
sim.res[i,j] <- (sqrt(sum(sample.single^2)) <=1)
}
}
mean(sim.res)*4
sim.no <- 100
sample.size <- 500
sim.res <- matrix(NA,ncol = sample.size,nrow = sim.no)
for(i in 1:sim.no){
for(j in 1:sample.size){
sample.single <- runif(2,min = 0,max = 1)
sim.res[i,j] <- (sqrt(sum(sample.single^2)) <=1)
}
}
mean(sim.res)*4
sim.no <- 100
sample.size <- 500
sim.res <- matrix(NA,ncol = sample.size,nrow = sim.no)
for(i in 1:sim.no){
for(j in 1:sample.size){
sample.single <- runif(2,min = 0,max = 1)
sim.res[i,j] <- (sqrt(sum(sample.single^2)) <=1)
}
}
mean(sim.res)*4
?replicate
replicate(10,runif(2,min = 0,max = 1))
PiSampleGenerator <- function(sample.size){
replicate(10,runif(2,min = 0,max = 1))
}
PiSampleGenerator <- function(sample.size){
replicate(sample.size,runif(2,min = 0,max = 1))
}
a <- PiSampleGenerator(20)
a
PiCal <- function(sample){
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(sample.single^2)) <=1)
pi.cal <- mean(sim.res)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
}
PiCal <- function(sample){
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(sample.single^2)) <=1)
pi.cal <- mean(sim.res)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
}
pi01 <- PiCal(s1)
s1 <- PiSampleGenerator(1000)
pi01 <- PiCal(s1)
pi01$pi.cal
PiCal <- function(sample.size){
sample <- PiSampleGenerator(sample.size=sample.size)
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(sample.single^2)) <=1)
pi.cal <- mean(sim.res)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
}
pi01 <- PiCal(1000)
pi01$pi.cal
document()
load_all()
?PiCal
check()
check()
document()
document()
check()
check()
PiCal <- function(sample.size){
sample <- PiSampleGenerator(sample.size=sample.size)
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(vec^2)) <=1)
pi.cal <- mean(sim.res)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
}
PiCal(10)
PiCal <- function(sample.size){
sample <- PiSampleGenerator(sample.size=sample.size)
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(vec^2)) <=1)
pi.cal <- mean(sim.res)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
return(output)
}
PiCal(10)
check()
rm(list=ls())
PiSampleGenerator <- function(sample.size){
sample <- replicate(sample.size,runif(2,min = 0,max = 1))
return(sample)
}
PiCal <- function(sample.size){
sample <- PiSampleGenerator(sample.size=sample.size)
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(vec^2)) <=1)
pi.cal <- mean(indictor)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
return(output)
}
PiCal(10)
check()
check()
check()
document()
check()
document()
document()
check()
document()
sqrt(3)*sqrt(3)
sqrt(3)*sqrt(3) == 3
s01 <- PiSampleGenerator(20)
PiCal <- function(sample.size){
sample <- PiSampleGenerator(sample.size=sample.size)
indictor <- apply(sample,2,FUN=function(vec) sqrt(sum(vec^2)) <=1)
pi.cal <- mean(indictor)*4
output <- list(sample=sample,
indictor=indictor,
pi.cal=pi.cal)
return(output)
}
load_all()
s01 <- PiCal(20)
length(matrix(rnorm(4)))
sqrt(3)*sqrt(3)
sqrt(3)*sqrt(3) == 3
expect_that(sqrt(3)*sqrt(3), equals(3))
check()
check()
install.packages(testthat)
install.packages("testthat")
install.packages("testthat")
check()
devtools::use_testthat()
devtools::test()
devtools::test()
test_that("demo",{
s01 <- PiCal(20)
expect_that(mean(s01$sample) < 1, is_true())
expect_that(length(s01$sample), equals(40))
})
devtools::test()
library(devtools)
install.packages("devtools")
install.packages(c("roxygen2","tidyverse"))
install.packages(c("glmnet","ncvreg"))
devtools::test()
devtools::test()
devtools::test()
library(devtools)
use_travis()
use_readme_md
use_readme_md()
rm(list=ls())
list
PiCal
search()
detach(RGRP)
detach("RGRP")
detach_package(RGRP)
detach_package(RGRP)
detach(package:RGRP, unload=TRUE)
PiCal
library(RGRP)
load_all()
PiCal(100)
PiCal(1000)
?install
load_all()
PiCal(20)
PiCal(100)
load_all()
load_all()
??s3method
load_all()
PiCal(12)
PiCal(12)
load_all()
PiCal(12)
load_all()
PiCal(12)
load_all()
PiCal(12)
a <- PiCal(12)
a
a$out$pi.cal
load_all()
PiCal(12)
PiCal(10000)
a <- PiCal(10000)
a
a
plot.matrix <- rbind(a$out$sample,)
a$out$sample
a <- PiCal(100)
a$out$sample
test <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black")
}
test(a)
a$out$
test <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
}
test(a)
test <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
}
test(a)
test <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test(a)
load_all()
a <- PiCal(100)
test(a)
a$out$pi.cal
a$out$indictor
a$out$sample
laod_all()
load_all()
a <- PiCal(20)
test(a)
a <- PiCal(100)
a$out$indictor
test(a)
a <- PiCal(10000)
test(a)
load_all()
res01 <- PiCal(100)
res01
plot(res01)
?plot
plot.pical_s3  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
plot(res01)
plot.pical_s3  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
plot.pical_s3(res01)
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
plot(x=c(1:10),y=c(1:10))
?plot
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point)
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
test02(res01[1,])
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point[1,])
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point[2,])
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point[2,])
plot(x=inside.point[1,],col="black", pch=19)
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point[2,])
plot(x=inside.point[1,])
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point[2,])
plot(x=inside.point[1,],y=inside.point[2,])
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
test02(res01)
plot(x=c(1:10), y=c(1:10))
#S3method(plot, pical_s3)
plot <- function(x,y,...) UseMethod("plot")
plot.pical_s3  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
plot(x=inside.point[1,], y=inside.point[2,], col="black",pch=19)
points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
plot.pical_s3(res01)
test02  <- function(x){
plot.matrix <- rbind(x$out$sample,x$out$indictor)
inside.point <- plot.matrix[1:2,which(plot.matrix[3,]==1)]
outside.point <- plot.matrix[1:2,which(plot.matrix[3,]==0)]
print(inside.point[2,])
plot(x=inside.point[1,],y=inside.point[2,])
#plot(x=inside.point[1,], y=inside.point[2,], col="black", pch=19)
#points(x=outside.point[1,], y=outside.point[2,], col="red",pch=19)
}
load_all
load_all()
res01 <- PiCal(100)
res01
plot(res01)
res01 <- PiCal(10000)
res01
plot(res01)
